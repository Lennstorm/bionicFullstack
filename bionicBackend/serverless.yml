# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: ${file(./local.yml):organisation}
# "service" is the name of this project. This will also be added to your AWS resource names.
service: bionicBackend
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  deploymentMethod: direct
  iam:
    role: ${file(./local.yml):iamRole}
  httpApi:
    cors: true

build:
  esbuild:
    minify: true

package:
  individually: true

functions:
  CreateMenuD:
    handler: src/functions/CreateMenuDb/index.handler
    events:
      - httpApi:
          path: /api/create-menu
          method: post

  
  GetMenu:
    handler: src/functions/GetMenu/index.handler
    events:
      - httpApi:
          path: /api/get-menu
          method: get


  SortMenu:
    handler: src/functions/SortMenu/index.handler
    events:
      - httpApi:
          path: /api/sort-menu
          method: post       

  AddUser:
    handler: src/functions/AddUser/index.handler
    events:
      - httpApi:
          path: /api/add-user
          method: post
  AddOrderToDb:
    handler: src/functions/AddOrderToDb/index.handler
    events:
      - httpApi:
          path: /api/orders
          method: post

  AddBasketToDb:
    handler: src/functions/AddBasketToDb/index.handler
    events:
      - httpApi:
          path: /api/basket
          method: post


resources:
  Resources:
    TestMenuTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "menus-to-db"
        AttributeDefinitions:
          - AttributeName: "MenuItemID"
            AttributeType: "S" # S för sträng
        KeySchema:
          - AttributeName: "MenuItemID" # Partition key
            KeyType: HASH # Detta är din PK (Partition Key)
        BillingMode: PAY_PER_REQUEST # Betalning per användning       

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "user-to-db"
        AttributeDefinitions:
          - AttributeName: "userid"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "userid"
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    BasketTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "basket-db"
        AttributeDefinitions:
          - AttributeName: "basketItemID"
            AttributeType: "S"
          - AttributeName: "userID"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "basketItemID"
            KeyType: "HASH"
          - AttributeName: "userID"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
    
    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "orders-db-v3"
        AttributeDefinitions:
          - AttributeName: "orderItemID"
            AttributeType: "S"
          - AttributeName: "userid"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "orderItemID"
            KeyType: HASH
          - AttributeName: "userid"
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST